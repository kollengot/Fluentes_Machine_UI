[{"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/index.js":"1","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/reportWebVitals.js":"2","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/user/Login.js":"3","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/user/Dashboard.js":"4","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/Constants.js":"5","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/user/Quote.js":"6","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/Header.js":"7","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/user/QuoteList.js":"8","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/user/QuoteDetail.js":"9","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/Routes.js":"10","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/Footer.js":"11","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/AdminDashboard.js":"12","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/ManageInventory.js":"13","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/EditInventory.js":"14","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/ManageOperations.js":"15","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/EditOperations.js":"16","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/Utils.js":"17","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/ManageWorker.js":"18","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/EditWorker.js":"19","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/ManageProjects.js":"20","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/EditProject.js":"21","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/ManageCustomer.js":"22","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/EditCustomer.js":"23","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/ManageInspections.js":"24","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/services/auth.service.js":"25","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/services/admin.service.js":"26","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/Upload.js":"27","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/services/user.service.js":"28","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/ForgotPassword.js":"29","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/EditQuote.js":"30","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/ManageQuote.js":"31","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/components/MyAlert.js":"32","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/components/Popup.js":"33","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/components/Sidebar.js":"34","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/worker/WorkerDashboard.js":"35","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/worker/WorkerOperations.js":"36","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/worker/WorkerProjects.js":"37","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/worker/WorkerTimesheet.js":"38","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/ToolsList.js":"39","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/components/Checkbox.js":"40","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/OperationList.js":"41","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/ConfigureOperation.js":"42","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/components/TableRow.js":"43","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/components/TableHeader.js":"44","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/Profile.js":"45","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/services/worker.service.js":"46"},{"size":410,"mtime":1630695188461,"results":"47","hashOfConfig":"48"},{"size":362,"mtime":1611647184538,"results":"49","hashOfConfig":"48"},{"size":5251,"mtime":1630692541546,"results":"50","hashOfConfig":"48"},{"size":3039,"mtime":1632897720894,"results":"51","hashOfConfig":"48"},{"size":574,"mtime":1631563677734,"results":"52","hashOfConfig":"48"},{"size":11209,"mtime":1633584053064,"results":"53","hashOfConfig":"48"},{"size":2222,"mtime":1633546334991,"results":"54","hashOfConfig":"48"},{"size":5345,"mtime":1633586059060,"results":"55","hashOfConfig":"48"},{"size":22711,"mtime":1633589324309,"results":"56","hashOfConfig":"48"},{"size":1216,"mtime":1625797895746,"results":"57","hashOfConfig":"48"},{"size":358,"mtime":1612063115281,"results":"58","hashOfConfig":"48"},{"size":2611,"mtime":1630695262470,"results":"59","hashOfConfig":"48"},{"size":9619,"mtime":1633470931460,"results":"60","hashOfConfig":"48"},{"size":8248,"mtime":1633025601798,"results":"61","hashOfConfig":"48"},{"size":8851,"mtime":1633029418378,"results":"62","hashOfConfig":"48"},{"size":12509,"mtime":1633587027658,"results":"63","hashOfConfig":"48"},{"size":1032,"mtime":1631596646493,"results":"64","hashOfConfig":"48"},{"size":9043,"mtime":1633587928099,"results":"65","hashOfConfig":"48"},{"size":9959,"mtime":1633587317858,"results":"66","hashOfConfig":"48"},{"size":9653,"mtime":1633064122030,"results":"67","hashOfConfig":"48"},{"size":12061,"mtime":1633070105919,"results":"68","hashOfConfig":"48"},{"size":7719,"mtime":1633128780248,"results":"69","hashOfConfig":"48"},{"size":7103,"mtime":1633365274940,"results":"70","hashOfConfig":"48"},{"size":12072,"mtime":1633153556246,"results":"71","hashOfConfig":"48"},{"size":2364,"mtime":1633408472119,"results":"72","hashOfConfig":"48"},{"size":12098,"mtime":1633470353229,"results":"73","hashOfConfig":"48"},{"size":1372,"mtime":1623734059427,"results":"74","hashOfConfig":"48"},{"size":3522,"mtime":1633588886071,"results":"75","hashOfConfig":"48"},{"size":2837,"mtime":1633456417179,"results":"76","hashOfConfig":"48"},{"size":22487,"mtime":1633497202870,"results":"77","hashOfConfig":"48"},{"size":8302,"mtime":1633066488582,"results":"78","hashOfConfig":"48"},{"size":386,"mtime":1630692468135,"results":"79","hashOfConfig":"48"},{"size":2365,"mtime":1633410655147,"results":"80","hashOfConfig":"48"},{"size":3269,"mtime":1630693936976,"results":"81","hashOfConfig":"48"},{"size":1779,"mtime":1630653254288,"results":"82","hashOfConfig":"48"},{"size":5826,"mtime":1631562561761,"results":"83","hashOfConfig":"48"},{"size":6059,"mtime":1631562700034,"results":"84","hashOfConfig":"48"},{"size":562,"mtime":1626152776745,"results":"85","hashOfConfig":"48"},{"size":4472,"mtime":1627573905514,"results":"86","hashOfConfig":"48"},{"size":369,"mtime":1626846725760,"results":"87","hashOfConfig":"48"},{"size":3091,"mtime":1627619563041,"results":"88","hashOfConfig":"48"},{"size":12132,"mtime":1633587194666,"results":"89","hashOfConfig":"48"},{"size":1725,"mtime":1633497033896,"results":"90","hashOfConfig":"48"},{"size":563,"mtime":1630692946468,"results":"91","hashOfConfig":"48"},{"size":6559,"mtime":1633583993305,"results":"92","hashOfConfig":"48"},{"size":854,"mtime":1633412482247,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"oxb9l2",{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"96"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"96"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"96"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"96"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"96"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"96"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"96"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"96"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"96"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"96"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"96"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"96"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"96"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"96"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"96"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/index.js",[],["203","204"],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/reportWebVitals.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/user/Login.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/user/Dashboard.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/Constants.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/user/Quote.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/Header.js",["205"],"import React, { Component } from 'react';\n\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport { Button, ButtonGroup } from 'reactstrap';\nimport LogoImage from '../../images/Logo.png';\nimport Popup from \"../components/Popup\";\nimport {usersTag}  from \"../common/Constants\";\n\nclass Header extends Component {\n    state = {\n        popupConfig: {},\n        isPopupOpen: false,\n        user: JSON.parse(localStorage.getItem('user'))   \n    }\n    constructor(props) {\n        super(props);\n    }\n    handleClose = (list) => {\n        this.setState({\n            isPopupOpen: false\n        });\n    }\n    clickToggle = () => {\n        alert(\"dsad\");\n    }\n    logOut() {\n        localStorage.removeItem(\"user\");\n    }\n    showProfile() {\n        this.setState({\n            isPopupOpen: true,\n            popupConfig: {\n                header: \"Manage Profile\",\n                body: \"\",\n                type: \"profile\"\n            }\n        });\n    }\n    render() {\n        return (\n            <React.Fragment>\n                <div className=\"page-header sticky-top\">\n                    <img className=\"logo-header\" alt=\"Logo\" src={LogoImage} />\n                    <div className=\"float-right\">\n\n                        <Dropdown as={ButtonGroup}>\n                            <Button >{this.state.user.userName}</Button>\n                            <Dropdown.Toggle split variant=\"info\" id=\"dropdown-split-basic\"/>\n                            <Dropdown.Menu>\n                            {this.state.user.userId === usersTag.WORKER_TAG && <Dropdown.Item onClick={() => this.showProfile()}>Profile</Dropdown.Item>}\n                            {this.state.user.userId === usersTag.USER_TAG && <Dropdown.Item onClick={() => this.showProfile()}>Profile</Dropdown.Item>}   \n                                <Dropdown.Item href=\"/\" onClick={() => this.logOut()}>Logout</Dropdown.Item>\n                            </Dropdown.Menu>\n                        </Dropdown>\n                    </div>\n                </div>\n                <Popup popupConfig={this.state.popupConfig} openFlag={this.state.isPopupOpen} parentCloseCallback={this.handleClose}></Popup>\n            </React.Fragment>\n        );\n    }\n}\nexport default Header;","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/user/QuoteList.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/user/QuoteDetail.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/Routes.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/Footer.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/AdminDashboard.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/ManageInventory.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/EditInventory.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/ManageOperations.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/EditOperations.js",["206","207","208","209","210","211"],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/Utils.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/ManageWorker.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/EditWorker.js",["212","213"],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/ManageProjects.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/EditProject.js",["214","215","216"],"import React, { Component } from 'react';\n\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport AdminService from \"../services/admin.service\";\nimport Popup from \"../components/Popup\";\n\nclass EditProject extends Component {\n    constructor(props) {\n        super(props);\n        this.getAllWorkers();\n        this.getSingleProject();\n    }\n    state = {\n        item: {},\n        workerList: [],\n        selectedWorker: {},\n        popupConfig: {},\n        isPopupOpen: false,\n        errors: {}\n    }\n    getSingleProject = () => {\n        AdminService.getSingleProject(this.props.selectedId).then(\n          response => {\n            if (response) {\n              this.setState({\n                item: response.data\n              });\n            }\n          },\n          error => {\n            console.log(\"Error\");\n          }\n        );\n      };\n    handleChange(propertyName, event) {\n        var item = this.state.item;\n        item[propertyName] = event.target.value;\n        this.setState({ item: item });\n    }\n    handleDateChange(propertyName, event) {\n        var item = this.state.item;\n        item[propertyName] = new Date(event);\n        this.setState({ item: item });\n    }\n    handleClose = () => {\n        this.setState({\n            isPopupOpen: false\n        });\n    }\n    showPopupMessage(message) {\n        this.setState({\n            isPopupOpen: true,\n            popupConfig: {\n                header: \"Message\",\n                body: message,\n                type: \"message\"\n            }\n        });\n    }\n    validateForm() {\n        let errors = {};\n        let isValid = true;\n        \n        if (!this.state.item.name) {\n            isValid = false;\n            errors[\"name\"] = \"Please enter project name.\";\n        }\n        this.setState({\n            errors: errors\n        });\n        return isValid;\n    }\n\n    saveProject() {\n        if(this.validateForm()) {\n            var data = {\n                \"name\": this.state.item.name,\n                \"desc\": this.state.item.desc,\n                \"startDate\": this.state.item.start_date,\n                \"endDate\": this.state.item.end_date,\n                \"workers\": this.state.item.workers\n            };\n            AdminService.editProject(this.state.item.id, data).then(\n                response => {\n                    // this.showPopupMessage(response.data.message);\n                    this.props.parentCallback(response);\n                },\n                error => {\n                    console.log(\"Error\");\n                }\n            );\n        }\n    }\n    resetReq() {\n\n    }\n    handleBreadCrumb() {\n        this.props.parentCallback();\n    }\n    getAllWorkers() {\n        AdminService.getAllWorkers().then(\n            response => {\n                this.setState({\n                    workerList: response.data.rows\n                });\n            },\n            error => {\n                console.log(\"Error\");\n            }\n        );\n    }\n    statusChange(event) {\n        var data = {\n            \"status\": \"CLOSED\"\n        };\n        AdminService.changeProjectStatus(this.state.item.id, data).then(\n            response => {\n                this.showPopupMessage(response.data.message);\n            },\n            error => {\n                console.log(\"Error\");\n            }\n        );\n    }\n    handleWorkerSelection(event) {\n        this.state.selectedWorker = this.state.workerList.find(o => o.id == event.target.value);\n    }\n    addWorker(event) {\n        this.state.selectedWorker['required_hrs'] = this.state.item.workerRequired;\n        //this.state.selectedWorker['est_cost'] = parseInt(this.state.item.workerRequired) * parseInt(this.state.selectedWorker.cost_per_hr);\n        var selectedProject = this.state.item;\n        if (!selectedProject.workers) {\n            selectedProject['workers'] = [];\n        }\n        selectedProject.workers.push(this.state.selectedWorker);\n        this.setState({ item: selectedProject });\n        console.log(this.state.item);\n\n    }\n    render() {\n        return (\n            <React.Fragment>\n\n                <div className=\"col edit-inventory\">\n                    <div className=\"list-group-header section-header row\">\n                        <div className=\"col-4\">\n\n                            <nav aria-label=\"breadcrumb\">\n                                <ul className=\"breadcrumb\">\n                                    <li className=\"breadcrumb-item\" onClick={this.handleBreadCrumb.bind(this)}>\n                                        <span className=\"mb-1 underline\">Manage</span>\n                                        <span className=\"mb-1 blue-color pl-2\">Project</span>\n                                    </li>\n                                    <li className=\"breadcrumb-item active\" aria-current=\"page\">\n                                        <span className=\"mb-1\">{(this.state.item.length !== 0) ? 'Edit' : 'Add'}</span>\n                                        <span className=\"mb-1 blue-color pl-2\">Project</span>\n                                    </li>\n                                </ul>\n                            </nav>\n\n                        </div>\n                        <div className=\"col-8 text-right\">\n                            <button type=\"button\" className=\"btn btn-blue btn-sm pr-4 pl-4\" onClick={() => this.resetReq()} >Reset</button>\n                            <button type=\"button\" className=\"btn btn-green btn-sm ml-2 pr-4 pl-4\" onClick={() => this.saveProject()}>Save</button>\n                        </div>\n                    </div>\n\n                    <div className=\"blue-box-div row\">\n                        <div className=\"col white-border-right\">\n                            <div>\n                                <span>Project Name</span>\n                                <input type=\"text\"\n                                    className=\"form-control\" defaultValue={this.state.item.name}\n                                    onChange={this.handleChange.bind(this, 'name')} />\n                                <div className=\"text-danger\">{this.state.errors.name}</div>\n                            </div>\n                            <div>\n                                <span>Description</span>\n                                <textarea className=\"form-control\" rows=\"3\"\n                                    defaultValue={this.state.item.desc}\n                                    onChange={this.handleChange.bind(this, 'desc')}></textarea>\n                            </div>\n<div>\n                                <span>Start Date</span>\n                                <DatePicker\n                                    selected={this.state.item.start_date && new Date(this.state.item.start_date)}\n                                    onChange={this.handleDateChange.bind(this, 'start_date')}\n                                    className=\"form-control\"\n                                    minDate={new Date()}\n                                />\n                            </div>\n                            <div>\n                                <span>End Date</span>\n                                <DatePicker\n                                    selected={this.state.item.end_date && new Date(this.state.item.end_date)}\n                                    onChange={this.handleDateChange.bind(this, 'end_date')}\n                                    className=\"form-control\"\n                                    minDate={new Date(this.state.item.start_date)}\n                                />\n                            </div>\n\n                        </div>\n\n                        <div className=\"col\">\n\n\n                            <div className=\"row\">\n                                <div className=\"col\"><span>Worker</span></div>\n                                <div className=\"col\"><span>Required Hours</span></div>\n                            </div>\n\n                            <div className=\"row\">\n                                <div className=\"col\">\n                                    <select className=\"form-control\" onChange={this.handleWorkerSelection.bind(this)}>\n                                        <option selected>Select Worker</option>\n                                        {this.state.workerList.map((item) => (\n                                            <option key={item.id} value={item.id}>{item.name}</option>\n                                        ))}\n                                    </select>\n                                </div>\n\n                                <div className=\"col\">\n                                    <input type=\"number\" className=\"form-control col-2 d-inline\" onChange={this.handleChange.bind(this, 'workerRequired')} />\n                                    <button type=\"button\" className=\"btn btn-green btn-sm ml-2 pr-4 pl-4 d-inline\" onClick={this.addWorker.bind(this)}>Add</button>\n                                </div>\n\n                            </div>\n\n                            <div className=\"row mt-1 quote-req-header font-weight-bold\">\n                                <div className=\"col-sm\">\n                                    <label>Name</label>\n                                </div>\n                                <div className=\"col-sm\">\n                                    <label>Profession</label>\n                                </div>\n                                <div className=\"col-sm\">\n                                    <label>Available per day </label>\n                                </div>\n                                <div className=\"col-sm\">\n                                    <label>Required Hours</label>\n                                </div>\n                                <div className=\"col-sm\">\n                                    <label>Cost per hour</label>\n                                </div>\n                                <div className=\"col-sm\">\n                                    <label>Estimated Cost</label>\n                                </div>\n                            </div>\n\n                            {this.state.item.workers && this.state.item.workers.map(listitem => (\n\n                                <div className=\"row mt-1\" >\n                                    <div className=\"col-sm\" >\n                                        <label className=\"description-truncate text-truncate\">{listitem.name}</label>\n                                    </div>\n                                    <div className=\"col-sm\" >\n                                        <label>{listitem.name}</label>\n                                    </div>\n                                    <div className=\"col-sm\" >\n                                        <label>{listitem.avail_per_day}</label>\n                                    </div>\n                                    <div className=\"col-sm\" >\n                                        <label>{listitem.required_hrs}</label>\n                                    </div>\n                                    <div className=\"col-sm\" >\n                                        <label>{listitem.cost_per_hr}</label>\n                                    </div>\n                                    <div className=\"col-sm\" >\n                                        <label>{listitem.cost_per_hr * listitem.required_hrs}</label>\n                                    </div>\n                                </div>\n                            ))}\n\n                           \n\n\n\n\n\n                            <div className=\"row\">\n                                <button type=\"button\" className=\"btn btn-green btn-sm m-4 pr-4 pl-4 d-inline\" onClick={this.statusChange.bind(this)}>Project Completed</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <Popup popupConfig={this.state.popupConfig} openFlag={this.state.isPopupOpen} parentCloseCallback={this.handleClose} ></Popup>\n            </React.Fragment>\n        );\n    }\n}\nexport default EditProject;","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/ManageCustomer.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/EditCustomer.js",["217","218"],"import React, { Component } from 'react';\nimport AdminService from \"../services/admin.service\";\nimport AuthService from \"../services/auth.service\";\n\nclass EditCustomer extends Component {\n    state = {\n        item: this.props.selectedItem,\n        editCustomerPage: this.props.editCustomerPage,\n        errors: {}\n    }\n    handleChange(propertyName, event) {\n        var item = this.state.item;\n        item[propertyName] = event.target.value;\n        this.setState({ item: item });\n    }\n    saveCustomer() {\n        if(this.validateForm()) {\n            if(this.state.item.id) {\n                this.editCustomer();\n            } else {\n                this.createNewCustomer();\n            }\n            \n        }\n    }\n    validateForm() {\n        let errors = {};\n        let isValid = true;\n        \n        if (!this.state.item.name) {\n            isValid = false;\n            errors[\"name\"] = \"Please enter customer name.\";\n        }\n        if (!this.state.item.email) {\n            isValid = false;\n            errors[\"email\"] = \"Please enter your email Address.\";\n        }\n        if (typeof this.state.item.email !== \"undefined\") {\n            var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\n            if (!pattern.test(this.state.item.email)) {\n                isValid = false;\n                errors[\"email\"] = \"Please enter valid email address.\";\n            }\n        }\n        if (!this.state.item.phone) {\n            isValid = false;\n            errors[\"phone\"] = \"Please enter your phone number.\";\n        }\n        if (typeof this.state.item.phone !== \"undefined\") {\n            var pattern = new RegExp(/^[0-9\\b]+$/);\n            if (!pattern.test(this.state.item.phone)) {\n                isValid = false;\n                errors[\"phone\"] = \"Please enter only number.\";\n            } else if (this.state.item.phone.length != 10) {\n                isValid = false;\n                errors[\"phone\"] = \"Please enter valid phone number.\";\n            }\n        }\n        this.setState({\n            errors: errors\n        });\n        return isValid;\n    }\n    editCustomer() {\n        var data = {\n            \"name\": this.state.item.name,\n            \"email\": this.state.item.email,\n            \"phone\": this.state.item.phone,\n            \"address\" : this.state.item.address\n        };\n\n        AdminService.editCustomer(this.state.item.id, data).then(\n            response => {\n                this.props.parentCallback(response);\n            },\n            error => {\n                console.log(\"Error\");\n            }\n        ); \n    }\n    createNewCustomer() {\n        var data = {\n            \"name\": this.state.item.name,\n            \"email\": this.state.item.email,\n            \"phone\": this.state.item.phone,\n            \"address\" : this.state.item.address\n        };\n\n        AuthService.createCustomer(data).then(\n            response => {\n                this.props.parentCallback(response);\n            },\n            error => {\n                console.log(\"Error\");\n            }\n        );\n    }\n\n    resetReq() {\n\n    }\n    handleBreadCrumb() {\n        this.props.parentCallback();\n    }\n    render() {\n        return (\n            <React.Fragment>\n\n                <div className=\"col edit-customer\">\n                    <div className=\"list-group-header section-header row\">\n                        <div className=\"col-4\">\n\n                            <nav aria-label=\"breadcrumb\">\n                                <ul className=\"breadcrumb\">\n                                    <li className=\"breadcrumb-item\" onClick={this.handleBreadCrumb.bind(this)}>\n                                        <span className=\"mb-1 underline\">Manage</span>\n                                        <span className=\"mb-1 blue-color pl-2\">Customer</span>\n                                    </li>\n                                    <li className=\"breadcrumb-item active\" aria-current=\"page\">\n                                        <span className=\"mb-1\">{(this.state.item.length !== 0) ? 'Edit' : 'Add'}</span>\n                                        <span className=\"mb-1 blue-color pl-2\">Customer</span>\n                                    </li>\n                                </ul>\n                            </nav>\n\n                        </div>\n                        <div className=\"col-8 text-right\">\n                            <button type=\"button\" className=\"btn btn-blue btn-sm pr-4 pl-4\" onClick={() => this.resetReq()} >Reset</button>\n                            <button type=\"button\" className=\"btn btn-green btn-sm ml-2 pr-4 pl-4\" onClick={() => this.saveCustomer()}>Save</button>\n                        </div>\n                    </div>\n\n                    <div className=\"blue-box-div row\">\n                        <div className=\"col\">\n                            <div>\n                                <span>Customer Name</span>\n                                <input type=\"text\"\n                                    className=\"form-control\" defaultValue={this.state.item.name}\n                                    onChange={this.handleChange.bind(this, 'name')} />\n                                <div className=\"text-danger\">{this.state.errors.name}</div>\n                            </div>\n                            <div>\n                                <span>Phone</span>\n                                <input type=\"text\"\n                                    className=\"form-control\" defaultValue={this.state.item.phone}\n                                    onChange={this.handleChange.bind(this, 'phone')} />\n                                <div className=\"text-danger\">{this.state.errors.phone}</div>\n                            </div>\n                            <div>\n                                <span>Address</span>\n                                <textarea className=\"form-control\" rows=\"3\"\n                                    defaultValue={this.state.item.address}\n                                    onChange={this.handleChange.bind(this, 'address')}></textarea>\n                            \n                            </div>\n                            <div>\n                                <span>Email</span>\n                                <input type=\"text\" readOnly = {this.state.item.id ? true : false }\n                                    className=\"form-control\" defaultValue={this.state.item.email}\n                                    onChange={this.handleChange.bind(this, 'email')} />\n                                <div className=\"text-danger\">{this.state.errors.email}</div>\n                            </div>\n                            \n                            \n                        </div>\n                       \n\n                    </div>\n\n\n\n                </div>\n\n\n            </React.Fragment>\n        );\n    }\n}\nexport default EditCustomer;","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/ManageInspections.js",["219"],"import React, { Component } from 'react';\nimport Popup from \"../components/Popup\";\nimport { validationMessages } from '../common/Constants';\nimport AdminService from \"../services/admin.service\";\n\nclass ManageInspection extends Component {\n    state = {\n        selectedItem: [],\n        editInspectionPage: false,\n        popupConfig: {},\n        isPopupOpen: false,\n        errors: {}\n    }\n    constructor(props) {\n        super(props);\n        this.getAllInspectionList();\n    }\n    getAllInspectionList() {\n        AdminService.getAllInspection().then(\n            response => {\n                if(response){\n                    this.setState({\n                        listitems: response.data.inspections.rows\n                    });\n                }\n            },\n            error => {\n              console.log(\"Error\");\n            }\n          );\n    }\n\n    editInspection() {\n        if (this.state.selectedItem && this.state.selectedItem.length === 0) {\n            this.showPopup(validationMessages.NO_ITEM);\n        } else {\n            this.setState({\n                editInspectionPage: true\n            });\n        }\n    }\n    addInspection() {\n        this.setState({\n            selectedItem: []\n        });\n        this.setState({\n            editInspectionPage: true\n        });\n    }\n\n    handleClose = () => {\n        this.setState({\n            isPopupOpen: false\n        });\n    }\n\n    handleModalYes = () => {\n        this.setState({\n            isPopupOpen: false\n        });\n        AdminService.deleteInspection(this.state.selectedItem.id).then(\n            response => {\n                this.showPopup(response.data.message);\n                var tempList = this.state.listitems.filter(item => item.id !== this.state.selectedItem.id);\n                this.setState({\n                    listitems: tempList,\n                    selectedItem: []\n                });\n            },\n            error => {\n              console.log(\"Error\");\n            }\n          );  \n    }\n\n    deleteInspection() {\n        if (this.state.selectedItem && this.state.selectedItem.length === 0) {\n            this.showPopup(validationMessages.NO_ITEM);\n        } else {\n            this.setState({\n                isPopupOpen: true,\n                popupConfig : {\n                    header: \"Confirm to Delete\",\n                    body:validationMessages.DELETE_CONFIRM+this.state.selectedItem.name,\n                    type: \"confirmation\"\n                }\n            });\n        }\n\n    }\n    onInspectionSelected(selectedItem) {\n        this.setState({\n            selectedItem: selectedItem\n        });\n    }\n    \n    handleFormChange(propertyName, event) {\n       \n    }\n    saveTaxUpdate() {\n\n    }\n    handleBreadCrumb() {\n        this.setState({\n            editInspectionPage: false\n        });\n    }\n    handleChange(propertyName, event) {\n        var item = this.state.selectedItem;\n        item[propertyName] = event.target.value;\n        this.setState({ selectedItem: item });\n    }\n    showPopup(message){\n        this.setState({\n            isPopupOpen: true,\n            popupConfig : {\n                header: \"Message\",\n                body:message,\n                type: \"message\"\n            }\n        });\n    }\n    validateForm() {\n        let errors = {};\n        let isValid = true;\n        if (!this.state.selectedItem.name) {\n            isValid = false;\n            errors[\"name\"] = \"Please enter inspection name.\";\n        }\n        if (!this.state.selectedItem.cost) {\n            isValid = false;\n            errors[\"cost\"] = \"Please enter inspection cost.\";\n        }\n\n        this.setState({\n            errors: errors\n        });\n        return isValid;\n\n    }\n    saveEditCallBack(response) {\n        this.showPopup(response.data.message);\n        this.setState({\n            editInspectionPage: false\n        });\n        this.getAllInspectionList();\n    }\n    saveInspection() {\n        if(this.validateForm()) {\n            if(this.state.selectedItem.id !== undefined) {\n                var data = {\n                    \"name\": this.state.selectedItem.name,\n                    \"cost\": parseInt(this.state.selectedItem.cost),\n                    \"desc\": this.state.selectedItem.desc\n                };\n    \n                AdminService.editInspection(this.state.selectedItem.id ,data).then(\n                    response => {\n                        if(response){\n                            this.saveEditCallBack(response);\n                        }\n                    },\n                    error => {\n                      console.log(\"Error\");\n                    }\n                  );\n            } else {\n                var data = {\n                    \"name\": this.state.selectedItem.name,\n                    \"cost\": parseInt(this.state.selectedItem.cost),\n                    \"desc\": this.state.selectedItem.desc\n                };\n                AdminService.createInspection(data).then(\n                    response => {\n                        if(response){\n                            this.saveEditCallBack(response);\n                        }\n                    },\n                    error => {\n                      console.log(\"Error\");\n                    }\n                  );\n                \n            }\n        }\n    }\n  \n    renderEditInspection() {\n        return(<div className=\"col edit-customer\">\n        <div className=\"list-group-header section-header row\">\n            <div className=\"col-6\">\n\n                <nav aria-label=\"breadcrumb\">\n                    <ul className=\"breadcrumb\">\n                        <li className=\"breadcrumb-item\" onClick={this.handleBreadCrumb.bind(this)}>\n                            <span className=\"mb-1 underline\">Manage</span>\n                            <span className=\"mb-1 blue-color pl-2\">Inspection</span>\n                        </li>\n                        <li className=\"breadcrumb-item active\" aria-current=\"page\">\n                            <span className=\"mb-1\">{(this.state.selectedItem.length !== 0) ? 'Edit' : 'Add'}</span>\n                            <span className=\"mb-1 blue-color pl-2\">Customer</span>\n                        </li>\n                    </ul>\n                </nav>\n\n            </div>\n            <div className=\"col-6 text-right\">\n                <button type=\"button\" className=\"btn btn-blue btn-sm pr-4 pl-4\"  >Reset</button>\n                <button type=\"button\" className=\"btn btn-green btn-sm ml-2 pr-4 pl-4\" onClick={() => this.saveInspection()}>Save</button>\n            </div>\n        </div>\n\n        <div className=\"blue-box-div row\">\n            <div className=\"col\">\n                <div>\n                    <span>Inspection Name</span>\n                    <input type=\"text\"\n                        className=\"form-control\" defaultValue={this.state.selectedItem.name}\n                        onChange={this.handleChange.bind(this, 'name')} />\n                    <div className=\"text-danger\">{this.state.errors.name}</div>\n                </div>\n                \n                <div>\n                    <span>Description</span>\n                    <textarea className=\"form-control\" rows=\"3\" \n                                    defaultValue={this.state.selectedItem.desc}\n                                    onChange={this.handleChange.bind(this, 'desc')}\n                        ></textarea>\n                \n                </div>\n                <div>\n                    <span>Cost</span>\n                    <input type=\"number\"\n                        className=\"form-control\"  defaultValue={this.state.selectedItem.cost}\n                        onChange={this.handleChange.bind(this, 'cost')}/>\n                    <div className=\"text-danger\">{this.state.errors.cost}</div>\n                </div>\n                \n                \n            </div>\n           \n\n        </div>\n\n\n\n    </div>);\n    }\n    renderTax() {\n        return(\n            <div className=\"col admin-list-page\">\n                <div className=\"list-group-header section-header row\">\n                <div className=\"col-3\">\n                    <span className=\"mb-1 underline\">Manage</span>\n                    <span className=\"mb-1 blue-color pl-2\">Tax</span> \n                </div>\n            </div>\n            <div className=\"col-6 blue-box-div tax-div d-inline-block\">\n                            <label className=\"pr-2\">Tax</label>\n                            <input type=\"number\" className=\"form-control d-inline-block\"\n                                        \n                                        onChange={this.handleFormChange.bind(this, 'tax')}\n                                    />\n                            <label className=\"pl-2\">%</label>\n\n\n              <button type=\"button\" className=\"btn btn-info btn-sm float-right mr-4\" onClick={() => this.saveTaxUpdate()}>Update</button>\n\n            </div>\n            </div>\n        );\n    }\n    renderInspectionList() {\n        return (<div className=\"col admin-list-page\">\n            <div className=\"list-group-header section-header row\">\n                <div className=\"col-6\">\n                    <span className=\"mb-1 underline\">Manage</span>\n                    <span className=\"mb-1 blue-color pl-2\">Inspection</span>\n\n                    \n                </div>\n                <div className=\"col-6 text-right inspection-btngrp pt-2\">\n                    <button className=\"btn delete-btn\" onClick={() => this.deleteInspection()}></button>\n                    <button className=\"btn edit-btn\" onClick={() => this.editInspection()}></button>\n                    <button className=\"btn add-btn\" onClick={() => this.addInspection()}></button>\n                    \n                </div>\n\n\n            </div>\n            <div className=\"quote-req-list \">\n                <div className=\"row mt-1 quote-req-header\">\n                    <div className=\"col-sm\">\n                        <label>Inspection Name</label>\n                    </div>\n                    <div className=\"col-sm\">\n                        <label>Inspection Desc</label>\n                    </div>\n                    <div className=\"col-sm\">\n                        <label>Inspection Cost</label>\n                    </div>\n                </div>\n                <div className=\"quote-req-table\">\n                    {this.state.listitems && this.state.listitems.map(listitem => (\n                            <div className=\"row mt-1\" key={listitem.id}>\n                                <div className=\"col-sm\" >\n                                    <label className=\"btn btn-default blue projectname-truncate text-truncate\">\n                                        <input type=\"radio\" className=\"toggle\"\n                                            name=\"quoteItem\" value={listitem.id}\n                                            onChange={() => this.onInspectionSelected(listitem)} />\n                                        {listitem.name}\n                                    </label>\n\n                                </div>\n                                <div className=\"col-sm\" >\n                                    <label className=\"\">{listitem.desc}</label>\n                                </div>\n                                <div className=\"col-sm\" >\n                                    <label className=\"\">{listitem.cost}</label>\n                                </div>\n                            </div>\n                        ))}\n                </div>\n            </div>\n           \n        </div>);\n    }\n    render() {\n        return (\n            <React.Fragment>\n                {!this.state.editInspectionPage && this.renderInspectionList()}\n                {this.state.editInspectionPage && this.renderEditInspection()}\n                {this.renderTax()}\n                <Popup popupConfig = {this.state.popupConfig} openFlag = {this.state.isPopupOpen} parentCloseCallback={this.handleClose.bind(this)} parentConfirmCallback = {this.handleModalYes.bind(this)}></Popup>\n            </React.Fragment>\n        );\n    }\n}\nexport default ManageInspection;","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/services/auth.service.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/services/admin.service.js",["220","221"],"import axios from 'axios';\n\nconst API_URL = \"https://funetus-api.herokuapp.com/admin/\";\n\n// Add a request interceptor\naxios.interceptors.request.use(\n    config => {\n        const user = JSON.parse(localStorage.getItem('user'));\n        if (user) {\n            config.headers['Authorization'] = 'Bearer ' + user.token;\n        }\n        config.headers['Content-Type'] = 'application/json';\n        return config;\n    },\n    error => {\n        Promise.reject(error)\n    });\n\naxios.interceptors.response.use((response) => {\n    return response\n},\n    function (error) {\n       // window.location.href = `/`;\n        return Promise.reject(error);\n    });\n\n\nclass AdminService {\n\n    getAllQuotes(pageNo) {\n        var config = {\n            method: 'get',\n            url: API_URL + 'quotes' +'?page='+pageNo\n        };\n\n        return axios(config)\n            .then(function (response) {\n                return response;\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    getSingleQuote(quoteId) {\n        var config = {\n            method: 'get',\n            url: API_URL + 'quotes/' + quoteId\n        };\n\n        return axios(config)\n            .then(function (response) {\n                return response;\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    deleteQuote(quoteId) {\n        var config = {\n            method: 'DELETE',\n            url: API_URL + 'quotes/' + quoteId\n        };\n\n        return axios(config)\n            .then(function (response) {\n                return response;\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n    changeStatus(quoteId,data) {\n        var config = {\n            method: 'post',\n            url: API_URL + '/quotes/'+quoteId+'/changeStatus',\n            data: data\n        };\n\n        return axios(config)\n            .then(function (response) {\n                return response;\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    tagQuote(data) {\n        //https://funetus-api.herokuapp.com/admin/quotes/tagQuotes\n        var config = {\n            method: 'PUT',\n            url: API_URL + 'quotes/tagQuotes',\n            data: data\n        };\n\n        return axios(config)\n            .then(function (response) {\n                return response;\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    getAllWorkers(pageNo) {\n        var config = {\n            method: 'get',\n            url: API_URL + 'workers?page='+pageNo\n        };\n\n        return axios(config)\n            .then(function (response) {\n                return response;\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    createWorker(data) {\n        var config = {\n            method: 'post',\n            url: API_URL + 'workers',\n            data: data\n        };\n        \n        return axios(config)\n            .then(function (response) {\n                return response;\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    deleteWorker(id) {\n        var config = {\n            method: 'DELETE',\n            url: API_URL + 'workers/' + id\n        };\n\n        return axios(config)\n            .then(function (response) {\n                return response;\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n    editWorker(id,data) {\n        var config = {\n            method: 'put',\n            url: API_URL + 'workers/'+id,\n            data: data\n        };\n\n        return axios(config)\n            .then(function (response) {\n                return response;\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    getAllOperations() {\n        var config = {\n            method: 'get',\n            url: API_URL + 'operation'\n        };\n\n        return axios(config)\n            .then(function (response) {\n                return response;\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n    getOperationById(id) {\n        var config = {\n            method: 'get',\n            url: API_URL + 'operation/' + id\n        };\n\n        return axios(config)\n            .then(function (response) {\n                return response;\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n    deleteOperation(id) {\n        var config = {\n            method: 'DELETE',\n            url: API_URL + 'operation/' + id\n        };\n\n        return axios(config)\n            .then(function (response) {\n                return response;\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n    createOperation(data) {\n        var config = {\n            method: 'post',\n            url: API_URL + 'operation',\n            data: data\n        };\n        console.log(config);\n        return axios(config)\n            .then(function (response) {\n                return response;\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n    editOperation(id,data) {\n        var config = {\n            method: 'put',\n            url: API_URL + 'operation/'+id,\n            data: data\n        };\n\n        return axios(config)\n            .then(function (response) {\n                return response;\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n    getAllInventory(pageNo) {\n        var config = {\n            method: 'get',\n            url: API_URL + 'inventory' +'?page='+pageNo\n        };\n\n        return axios(config)\n            .then(function (response) {\n                return response;\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n    createInventory(data) {\n        var config = {\n            method: 'post',\n            url: API_URL + 'inventory',\n            data: data\n        };\n        console.log(config);\n        return axios(config)\n            .then(function (response) {\n                return response;\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n    editInventory(id,data) {\n        var config = {\n            method: 'put',\n            url: API_URL + 'inventory/'+id,\n            data: data\n        };\n\n        return axios(config)\n            .then(function (response) {\n                return response;\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n    deleteInventory(id) {\n        var config = {\n            method: 'DELETE',\n            url: API_URL + 'inventory/' + id\n        };\n\n        return axios(config)\n            .then(function (response) {\n                return response;\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    getAllProjects() {\n        var config = {\n            method: 'get',\n            url: API_URL + 'project'\n        };\n\n        return axios(config)\n            .then(function (response) {\n                return response;\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n    deleteProject(id) {\n        var config = {\n            method: 'DELETE',\n            url: API_URL + 'project/' + id\n        };\n\n        return axios(config)\n            .then(function (response) {\n                return response;\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n    getSingleProject(id) {\n        var config = {\n            method: 'get',\n            url: API_URL + 'project/' + id\n        };\n\n        return axios(config)\n            .then(function (response) {\n                return response;\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n    editProject(id,data) {\n        var config = {\n            method: 'put',\n            url: API_URL + 'project/'+id,\n            data: data\n        };\n\n        return axios(config)\n            .then(function (response) {\n                return response;\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    \n    getAllCustomers() {\n        var config = {\n            method: 'get',\n            url: API_URL + 'customer'\n        };\n\n        return axios(config)\n            .then(function (response) {\n                return response;\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    deleteCustomer(id) {\n        var config = {\n            method: 'DELETE',\n            url: API_URL + 'customer/' + id\n        };\n\n        return axios(config)\n            .then(function (response) {\n                return response;\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    editCustomer(id,data) {\n        var config = {\n            method: 'put',\n            url: API_URL + 'customer/'+id,\n            data: data\n        };\n\n        return axios(config)\n            .then(function (response) {\n                return response;\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n    \n\n    getAllInspection() {\n        var config = {\n            method: 'get',\n            url: API_URL + 'inspection'\n        };\n\n        return axios(config)\n            .then(function (response) {\n                return response;\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n    createInspection(data) {\n        var config = {\n            method: 'post',\n            url: API_URL + 'inspection',\n            data: data\n        };\n        console.log(config);\n        return axios(config)\n            .then(function (response) {\n                return response;\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    editInspection(id,data) {\n        var config = {\n            method: 'put',\n            url: API_URL + 'inspection/'+id,\n            data: data\n        };\n\n        return axios(config)\n            .then(function (response) {\n                return response;\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n    deleteInspection(id) {\n        var config = {\n            method: 'DELETE',\n            url: API_URL + 'Inspection/' + id\n        };\n\n        return axios(config)\n            .then(function (response) {\n                return response;\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    changeProjectStatus(id, data) {\n        var config = {\n            method: 'post',\n            url: API_URL + 'project/changeStatus/'+ id,\n            data: data\n        };\n        return axios(config)\n            .then(function (response) {\n                console.log(response);\n                return response;\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n    convertToProject(id, data) {\n        var config = {\n            method: 'put',\n            url: API_URL + 'quotes/convertToProject/'+ id,\n            data: data\n        };\n        return axios(config)\n            .then(function (response) {\n                console.log(response);\n                return response;\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n}\n\nexport default new AdminService();","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/Upload.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/services/user.service.js",["222"],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/ForgotPassword.js",["223","224"],"import React, { Component } from 'react';\nimport { Button, Form, Input, InputGroup } from \"reactstrap\";\nimport { isEmail } from \"validator\";\n\nimport { loginMessages } from '../common/Constants';\nimport AuthService from \"../services/auth.service\";\n\nclass ForgotPassword extends Component {\n    constructor() {\n        super();\n        this.state = {\n            Email: '',\n            errors: {}\n        }\n        this.Email = this.Email.bind(this);\n    }\n    Email(event) {\n        this.setState({ Email: event.target.value })\n    }\n    validateForm() {\n        let errors = {};\n        let isValid = true;\n        if (!this.state.Email) {\n            isValid = false;\n            errors[\"email\"] = \"Please enter your email Address.\";\n        }\n        if (typeof this.state.Email !== \"undefined\") {\n            var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\n            if (!pattern.test(this.state.Email)) {\n                isValid = false;\n                errors[\"email\"] = \"Please enter valid email address.\";\n            }\n        }\n        this.setState({\n            errors: errors\n        });\n        return isValid;\n    }\n    forgotPassword = () => {\n        if(this.validateForm()) {\n            var data = JSON.stringify({\n                \"email\": this.state.Email\n            });\n            var errors = {};\n\n            AuthService.forgotPassword(data).then(\n                response => {\n                    if (response && response.data) {\n                        errors[\"resp\"] = \"Email sent successfully\";\n                    } else {\n                        errors[\"resp\"] = \"Someting went Wrong\";\n                    }\n                },\n                error => {\n                    errors[\"resp\"] = \"Someting went Wrong\";\n                }\n            );\n            debugger;\n            this.setState({\n                errors: errors\n            });\n            //this.props.popupClose();\n        }\n    }\n    render() {\n        return (\n            <React.Fragment>\n                <Form>\n                    <InputGroup className=\"mb-3\">\n                        <Input type=\"text\" onChange={this.Email} placeholder=\"name@example.com\" />\n                        </InputGroup>\n                    <Button color=\"success\" onClick={this.forgotPassword} >Submit</Button>\n                    <div className=\"text-danger mt-4\">{this.state.errors.email}</div>\n                    <div className=\"text-success mt-4\">{this.state.errors.resp}</div>\n                </Form>\n            </React.Fragment>\n        );\n    }\n}\nexport default ForgotPassword;","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/EditQuote.js",["225","226","227","228","229","230","231"],"import React, { Component } from 'react';\nimport { Button, Table } from 'reactstrap';\nimport { Accordion, Card } from \"react-bootstrap\";\n\nimport { statusColorClass, headerBtn } from '../common/Utils.js';\nimport Popup from \"../components/Popup\";\nimport TableHeader from \"../components/TableHeader\";\nimport TableRow from \"../components/TableRow\";\n\nimport AdminService from \"../services/admin.service\";\n\nimport { validationMessages } from '../common/Constants';\n\nimport operationJson from '../../data/quoteItem.json';\n\nclass QuoteReqUpdate extends Component {\n  state = {\n    selectedItem: {},\n    open: false,\n    operationsList: [],\n    tagoperationList: [],\n    inspectionsList: [],\n    selectedInspection: '',\n    popupConfig: {},\n    isPopupOpen: false,\n    selectedOperationId: 0,\n    configOpId: 0,\n    totalCost: 0,\n    taxCheckboxChecked: false\n  }\n  constructor(props) {\n    super(props);\n    this.getSingleQuote();\n    this.getOperations();\n    this.getInspections();\n  }\n  getOperations = () => {\n    AdminService.getAllOperations().then(\n      response => {\n        if (response) {\n          this.setState({\n            tagoperationList: response.data.rows\n          });\n        }\n      },\n      error => {\n        console.log(\"Error\");\n      }\n    );\n  };\n\n  getInspections = () => {\n    AdminService.getAllInspection().then(\n      response => {\n        if (response) {\n          this.setState({\n            inspectionsList: response.data.inspections.rows\n          });\n        }\n      },\n      error => {\n        console.log(\"Error\");\n      }\n    );\n  };\n\n  getSingleQuote = () => {\n    AdminService.getSingleQuote(this.props.selectedQuoteId).then(\n      response => {\n        if (response) {\n          this.setState({\n            selectedItem: response.data\n          });\n        }\n      },\n      error => {\n        console.log(\"Error\");\n      }\n    );\n  };\n  resetReq() {\n\n  }\n  showAvailableTools(id) {\n    this.setState({\n      configOpId: id,\n      selectedOperationId: id,\n      isPopupOpen: true,\n      popupConfig: {\n        header: \"Available Tools\",\n        body: '',\n        type: \"toolsList\"\n      }\n    });\n  }\n  showAvailableWorker(id) {\n    this.setState({\n      configOpId: id,\n      selectedOperationId: id,\n      isPopupOpen: true,\n      popupConfig: {\n        header: \"Available Workers\",\n        body: '',\n        type: \"workerList\"\n      }\n    });\n  }\n\n  saveQuoteUpdate() {\n\n\n    var tmptoolobj = [];\n    this.state.operationsList.QuoteOperationInv && this.state.operationsList.QuoteOperationInv.map((item, i) => {\n      var toolobj = {};\n      toolobj[\"invId\"] = item.Inventories.id;\n      toolobj[\"reqQty\"] = parseInt(item.req_quantity);\n      tmptoolobj.push(toolobj);\n    });\n\n\n    var tmpworkerobj = [];\n    this.state.operationsList.QuoteOperationWorker && this.state.operationsList.QuoteOperationWorker.map((item, i) => {\n      var workerobj = {};\n      workerobj[\"workerId\"] = item.Workers.id;\n      workerobj[\"totalHrs\"] = parseInt(item.total_hrs_req);\n      tmpworkerobj.push(workerobj);\n    });\n\n\n    var data = {\n      \"quoteId\": this.state.selectedItem.id,\n      \"status\": this.state.selectedItem.status,\n      \"operations\": [\n        {\n          \"operationId\": this.state.configOpId,\n          \"inspection\": this.state.selectedInspection,\n          \"operation_total_hrs\": this.state.operationsList.operation_total_hrs,\n          \"operation_cost\": this.state.operationsList.operation_cost,\n          \"tools\": tmptoolobj,\n          \"workers\": tmpworkerobj\n        }\n      ]\n    };\n    AdminService.tagQuote(data).then(\n      response => {\n        if(response)\n          this.showPopupMessage(response.data.message);\n        else \n          this.showPopupMessage(\"Something went wrong!\");\n      },\n      error => {\n        console.log(\"Error\");\n      }\n    );\n\n\n  }\n  submitQuoteUpdate() {\n    var data = {\n      \"status\": \"QUOTE_RECEIVED\"\n    };\n    AdminService.changeStatus(this.state.selectedItem.id, data).then(\n      response => {\n        console.log(response);\n        this.showPopupMessage(response.data.message);\n      },\n      error => {\n        console.log(\"Error\");\n      }\n    );\n  }\n  rejectQuote() {\n\n    this.setState({\n      isPopupOpen: true,\n      popupConfig: {\n        header: \"Reject Quote\",\n        body: '',\n        type: \"rejectQuote\"\n      }\n    });\n  }\n  changeQuoteToProject() {\n    var data = {\n      \"name\":this.state.selectedItem.title,\n      \"desc\":this.state.selectedItem.desc,\n      \"startDate\":this.state.selectedItem.endDate,\n      \"endDate\":this.state.selectedItem.startDate\n  };\n    AdminService.convertToProject(this.state.selectedItem.id, data).then(\n      response => {\n        if(response.data) \n          this.showPopupMessage(response.data.message);\n      },\n      error => {\n        console.log(\"Error\");\n      }\n    );\n  }\n\n  changeQuoteStatus(status,reasonTxt) {\n    var data = {\n      \"status\": status\n    };\n    if(status === \"QUOTE_REJECTED\") {\n      data.reason = reasonTxt\n    }\n    AdminService.changeStatus(this.state.selectedItem.id, data).then(\n      response => {\n        if(response.data) \n          this.showPopupMessage(response.data.message);\n      },\n      error => {\n        console.log(\"Error\");\n      }\n    );\n  }\n\n  showPopupMessage(message) {\n    this.setState({\n      isPopupOpen: true,\n      popupConfig: {\n        header: \"Message\",\n        body: message,\n        type: \"message\"\n      }\n    });\n  }\n\n  handleBreadCrumb() {\n    this.props.parentCallback();\n  }\n  deleteOperation(opId,opName,event) {\n    this.setState({\n      deleteOpId: opId,\n      isPopupOpen: true,\n      popupConfig : {\n          header: \"Confirm to Delete\",\n          body:validationMessages.DELETE_CONFIRM+opName,\n          type: \"confirmation\"\n      }\n  });\n\n\n  }\n\n  removeTool() {\n    alert(\"Do you want to remove tool\");\n  }\n  handleChange = e => {\n    console.log(e);\n  }\n\n  onDeleteRowClick = event => {\n    console.log(event.target.name);\n  }\n\n\n\n\n  handleReqAvailChange = event => {\n    let { value, min, max } = event.target;\n    value = Math.max(Number(min), Math.min(Number(max), Number(value)));\n    this.setState({ value });\n  }\n\n  handleClose = (list) => {\n\n    if (list && this.state.popupConfig.type === \"configureOperation\") {\n      var obj = this.state.tagoperationList.find(o => o.id == this.state.configOpId);\n      if (obj) {\n        var QuoteOperation = {\n          \"Operations\": {\n            \"id\": obj.id,\n            \"name\": obj.name,\n            \"desc\": obj.desc\n          },\n          \"QuoteOperationInv\": list.tools,\n          \"QuoteOperationWorker\": list.workers,\n          \"operation_cost\": list.totalCost,\n          \"operation_total_hrs\": list.workers.reduce((a, v) => a = parseInt(a) + parseInt(v.total_hrs_req), 0)\n        };\n        var newQuoteOperation = [...this.state.selectedItem.QuoteOperation, QuoteOperation];\n\n        var selectedItem = this.state.selectedItem;\n        selectedItem.QuoteOperation = newQuoteOperation;\n        this.setState({\n          operationsList: QuoteOperation\n        });\n        this.setState({\n          selectedItem\n        });\n      }\n    }\n    else if (list && this.state.popupConfig.type === \"toolsList\") {\n      console.log(this.state);\n      debugger;\n      var obj = this.state.selectedItem.QuoteOperation.find(o => o.Operations.id == this.state.configOpId);\n      if (obj) {\n        console.log(obj.QuoteOperationInv);\n        var newInventryList = [...obj.QuoteOperationInv, list.tools];\n        console.log(newInventryList);\n      }\n    } else if (list && this.state.popupConfig.type === \"operationList\") {\n      /*var tmp = this.state.operationsList;\n      tmp.push(list);\n      this.setState({\n        operationsList: tmp\n      });*/\n    }\n    this.setState({\n      isPopupOpen: false\n    });\n\n  };\n\n  handleModalYes = (data) => {\n    \n    this.setState({\n      isPopupOpen: false\n    });\n\n\n  if(this.state.popupConfig.type === \"rejectQuote\")\n  {\n    this.changeQuoteStatus(\"QUOTE_ADMIN_REJECTED\", data);\n  }\n   \nelse {\n  var tempList = this.state.selectedItem.QuoteOperation.filter(item => item.Operations.id !== this.state.deleteOpId);\n  var tmpSelectedItem = this.state.selectedItem;\n  tmpSelectedItem.QuoteOperation = tempList;\n  this.setState({\n    selectedItem: tmpSelectedItem\n  });\n}\n\n\n\n\n\n    \n\n \n\n    /*\n    AdminService.deleteQuote(this.state.selectedItem.id).then(\n      response => {\n        var tempList = this.state.listitems.filter(item => item.id !== this.state.selectedItem.id);\n        this.setState({\n          listitems: tempList,\n          selectedItem: []\n        });\n      },\n      error => {\n        console.log(\"Error\");\n      }\n    );\n    */\n\n\n  };\n\n  handleInspectionChange(event) {\n    this.setState({\n      selectedInspection: event.target.value\n    });\n  };\n\n  handleOperationChange(event) {\n    this.setState({\n      configOpId: event.target.value\n    });\n\n    this.setState({\n      isPopupOpen: true,\n      popupConfig: {\n        header: \"Configure Operations\",\n        body: '',\n        type: \"configureOperation\"\n      }\n    });\n\n  };\n\n\n\n\n  showOperationTools(inventory) {\n\n\n    var tableHeader = [\"inputCheckbox\", \"Tool Name\", \"Available Quantity\", \"Cost\", \"Required Quantity\"];\n    return (\n      <Table responsive=\"sm\">\n        <tbody>\n          <TableHeader\n            headerObj={tableHeader}\n            onCheckboxChange={this.handleChange}\n          />\n          {inventory && inventory.map((tool, i) => {\n            return (<TableRow\n              type=\"tool\"\n              listItem={tool.Inventories}\n              reqQty={tool.req_quantity}\n              deleteBtn = {true}\n              onDeleteRowClick = {this.onDeleteRowClick}\n            />);\n          })\n          }\n        </tbody>\n      </Table>\n    );\n  }\n\n  showOperationWorkers(workers) {\n    var tableHeader = [\"inputCheckbox\", \"Worker Name\", \"Available per Day\", \"Cost per Hour\", \"Required Hour\"];\n    return (\n      <Table responsive=\"sm\">\n        <tbody>\n          <TableHeader\n            headerObj={tableHeader}\n            onCheckboxChange={this.handleChange}\n          />\n          {workers && workers.map((item, i) => {\n            return (<TableRow\n              type=\"worker\"\n              listItem={item.Workers}\n              reqQty={item.total_hrs_req}\n              deleteBtn = {true}\n              onDeleteRowClick = {this.onDeleteRowClick}\n            />);\n          })\n          }\n        </tbody>\n      </Table>\n    );\n\n  }\n  getCost() {\n    if (this.state.selectedItem.QuoteOperation) {\n      var totalCost = (this.state.selectedItem.QuoteOperation.reduce((a, v) => a = a + v.operation_cost, 0));\n      if(this.state.taxCheckboxChecked) {\n        totalCost = totalCost + totalCost* (5/100);\n      }\n      return totalCost;\n    } else {\n      return (0);\n    }\n\n  };\n\n  handleTaxChange(evt) {\n    this.setState({ taxCheckboxChecked: evt.target.checked });\n  };\n\n  renderMeasureTable() {\n    var measures = this.state.selectedItem.Measures;\n    return (<div className=\"quote-data-div\">\n      <span className=\"underline half blue\">Measurements</span>\n\n      <div className=\"row\">\n        <div className=\"col\">\n          <label>Name</label>\n        </div>\n        <div className=\"col\">\n          <label>Unit</label>\n        </div>\n        <div className=\"col\">\n          <label>Quantity</label>\n        </div>\n      </div>\n\n      {measures && measures.map((item, index) => {\n        return (\n          <div className=\"row pb-2 green-text-color\" key={item.id}>\n            <div className=\"col\">\n              <label>{item.name}</label>\n            </div>\n            <div className=\"col\">\n              <label>{item.unit}</label>\n            </div>\n            <div className=\"col\">\n              <label>{item.qty}</label>\n            </div>\n\n          </div>\n        )\n      })\n      }\n    </div>);\n  }\n  removeUploadedImage(file) {\n\n/*\n    const config = {\n        bucketName: 'fuentes-fileupload',\n        dirName: 'quote-attachments',\n        region: 'us-west-1',\n        accessKeyId: 'AKIA5ARA5MYMNVC47U6F',\n        secretAccessKey: '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'\n    }\n   \n   \n    const ReactS3Client = new S3(config);\n\n    const filename = file.fileName;\n\n    ReactS3Client\n        .deleteFile(filename)\n        .then(response => console.log(response))\n        .catch(err => console.error(err))\n\n\n*/\n\n}\n  showUploadImage(filePath) {\n    this.setState({\n        isPopupOpen: true,\n        popupConfig: {\n            header: \"Uploaded Data\",\n            body: filePath,\n            type: \"image\"\n        }\n    });\n}\n\n  render() {\n\n    var userData = {};\n    var uploads = [];\n    if (this.state.selectedItem) {\n      userData = this.state.selectedItem.User;\n      uploads = this.state.selectedItem.Uploads;\n    }\n\n    return (\n      <React.Fragment>\n        <Popup popupConfig={this.state.popupConfig} openFlag={this.state.isPopupOpen} parentCloseCallback={this.handleClose} parentConfirmCallback={this.handleModalYes.bind(this)}></Popup>\n        <div className=\"col admin-quote-page\">\n          <div className=\"list-group-header section-header row\">\n            <div className=\"col-4\">\n\n              <nav aria-label=\"breadcrumb\">\n                <ul className=\"breadcrumb\">\n                  <li key=\"breadcrumb1\" className=\"breadcrumb-item\" onClick={this.handleBreadCrumb.bind(this)}>\n                    <span className=\"mb-1 underline\">Quote</span>\n                    <span className=\"mb-1 blue-color pl-2\">Requests</span>\n                  </li>\n                  <li key=\"breadcrumb2\" className=\"breadcrumb-item active\" aria-current=\"page\">\n                    <span className=\"mb-1\">Update</span>\n                    <span className=\"mb-1 blue-color pl-2\">Quote</span>\n                  </li>\n                </ul>\n              </nav>\n\n            </div>\n\n          \n\n            {headerBtn(this.state.selectedItem.status) > 4 ? ( <div className=\"col-8 text-right\">\n                  <button type=\"button\" className=\"btn btn-blue btn-sm pr-4 pl-4\" onClick={() => this.rejectQuote()} >Reject</button>\n                  <button type=\"button\" className=\"btn btn-green btn-sm ml-2 pr-4 pl-4\" onClick={() => this.changeQuoteToProject()}>Accept Purchase Order</button>\n                </div>) : (<div className=\"col-8 text-right\">\n                  <button type=\"button\" className=\"btn btn-blue btn-sm pr-4 pl-4\" onClick={() => this.resetReq()} >Reset</button>\n                  <button type=\"button\" className=\"btn btn-info btn-sm ml-2 pr-4 pl-4\" onClick={() => this.saveQuoteUpdate()}>Save</button>\n                  <button type=\"button\" className=\"btn btn-green btn-sm ml-2 pr-4 pl-4\" onClick={() => this.submitQuoteUpdate()}>Submit</button>\n                </div>)}\n\n\n          </div>\n          <div>\n            <div className=\"blue-box-div row\">\n              <div className=\"col-3 white-border-right\">\n                <div className=\"quote-data-div\">\n                  <span className=\"underline half blue\">Title</span>\n                  <span className={\"badge p-2 ml-2 float-right \" + statusColorClass(this.state.selectedItem.status)}>{this.state.selectedItem.status}</span>\n                  <p className=\"green-text-color\">{this.state.selectedItem.title}</p>\n                </div>\n\n                <div className=\"quote-data-div\">\n                  <span className=\"underline half blue\">Description</span>\n                  <p className=\"green-text-color\">{this.state.selectedItem.desc}</p>\n                </div>\n\n                <div className=\"quote-data-div\">\n                  <span className=\"underline half blue\">Submitted By</span>\n                  <p className=\"green-text-color\">{userData && userData.name}</p>\n                </div>\n\n                <div className=\"quote-data-div\">\n                  <span className=\"underline half blue\">Submitted On</span>\n                  <p className=\"green-text-color\">{(new Date(this.state.selectedItem.createdAt)).toLocaleDateString()}</p>\n                </div>\n                <div className=\"quote-data-div\">\n                  <span className=\"underline half blue\">Attachments</span>\n\n                  {uploads && uploads.map((item, index) => {\n                                return (\n                                    <div className=\"\">\n                                        <button className=\"btn btn-link p-0\" onClick={() => this.showUploadImage(item.filePath)}>{item.fileName}</button>\n                                       \n                                    </div>\n                                )\n                            })\n                            }\n\n                </div>\n                {this.state.selectedItem.Measures &&\n                  this.renderMeasureTable()\n                }\n              </div>\n\n\n              {this.state.selectedItem.status === \"PROJECT_IN_PROGRESS\" || this.state.selectedItem.status === \"QUOTE_PO_SUBMIT\" ?\n                \n                 <div className=\"col\">\n                      <span className=\"underline blue mb-2\">Purchase Order</span>\n                      <img src={this.state.selectedItem.submittedPO} className='po-img' alt='...'></img>\n\n                    </div>\n\n\n                :\n\n                (<div className=\"col quote-measurements\">\n                  <div className=\"row\">\n                    <div className=\"col-2\">\n                      <span className=\"underline blue\">Make a Quote</span>\n                    </div>\n                    <div className=\"col text-right\">\n\n\n                      <select className=\"form-control btn-green mb-2 mr-2 col-4 d-inline-block\" defaultValue={this.state.selectedItem.InspectionId} onChange={this.handleInspectionChange.bind(this)}>\n                        <option>Add Inspection</option>\n                        {this.state.inspectionsList && this.state.inspectionsList.map((item, index) => (\n                          <option key={item.id} value={item.id}>{item.name}</option>\n                        ))}\n                      </select>\n\n\n                      <select className=\"form-control btn-green mb-2 mr-2 col-4 d-inline-block\" onChange={this.handleOperationChange.bind(this)}>\n                        <option>Tag Operations</option>\n                        {this.state.tagoperationList && this.state.tagoperationList.map((item, index) => (\n                          <option key={item.id} value={item.id}>{item.name}</option>\n                        ))}\n                      </select>\n                      \n                      Apply Tax <input type=\"checkbox\" onChange={this.handleTaxChange.bind(this)}></input> \n                      <span className=\"blue ml-4\">Total Cost</span>\n                      <span className=\"badge btn-blue p-2 ml-2\">{this.getCost()}</span>\n                    </div>\n                  </div>\n\n                  <div className=\"card-header measurements-header row mt-1 font-weight-bold\">\n                    <div className=\"col-sm\">\n                      <label>Operation</label>\n                    </div>\n                    <div className=\"col-sm\">\n                      <label >Description</label>\n                    </div>\n                    <div className=\"col-sm\">\n                      <label>Hours</label>\n                    </div>\n                    <div className=\"col-sm\">\n                      <label>Workers</label>\n                    </div>\n\n                    <div className=\"col-sm\">\n                      <label>Cost</label>\n                    </div>\n                    <div className=\"col-sm\">\n                      <label>Tools</label>\n                    </div>\n\n                  </div>\n\n                  <Accordion>\n\n                    {this.state.selectedItem.QuoteOperation && this.state.selectedItem.QuoteOperation.map((operation, i) => {\n                      return (\n\n                        <Card key={i + \"cardKey\"}>\n                          <Accordion.Toggle as={Card.Header} eventKey={i + \"\"}>\n\n                            <div className=\"row mt-1 green-text-color\">\n                              <div className=\"col-sm\">\n                                <label>{operation.Operations.name}</label>\n                              </div>\n                              <div className=\"col-sm\">\n                                <label className=\"acc-description\">{operation.Operations.desc}</label>\n                              </div>\n                              <div className=\"col-sm\">\n                                <label>{operation.operation_total_hrs}</label>\n                              </div>\n                              <div className=\"col-sm\">\n                                <label>{operation.QuoteOperationWorker && operation.QuoteOperationWorker.length}</label>\n                              </div>\n\n                              <div className=\"col-sm\">\n                                <label>{operation.operation_cost}</label>\n                              </div>\n                              <div className=\"col-sm\">\n                                <label>{operation.QuoteOperationInv && operation.QuoteOperationInv.length}</label>\n                                <button onClick={this.deleteOperation.bind(this,operation.Operations.id,operation.Operations.name)} className=\"btn delete-btn float-right mr-5\" ></button>\n                              </div>\n                            </div>\n\n                          </Accordion.Toggle>\n                          <Accordion.Collapse eventKey={i + \"\"}>\n                            <Card.Body>\n                             {/* \n  <button type=\"button\" className=\"btn btn-blue btn-sm ml-2 pr-4 pl-4\" onClick={() => this.showAvailableTools(operation.Operations.id)}>Add Tools</button>\n    <button type=\"button\" className=\"btn btn-blue btn-sm ml-2 pr-4 pl-4\" onClick={() => this.showAvailableWorker(operation.Operations.id)}>Add Workers</button>\n                                                        \n*/} \n                              {operation.QuoteOperationInv.length > 0 && this.showOperationTools(operation.QuoteOperationInv)}\n                              {operation.QuoteOperationWorker.length > 0 && this.showOperationWorkers(operation.QuoteOperationWorker)}\n                            </Card.Body>\n                          </Accordion.Collapse>\n                        </Card>\n\n                      );\n                    })}\n                  </Accordion>\n\n                </div>)\n              }\n\n            </div>\n\n          </div>\n\n        </div>\n\n      </React.Fragment>\n    );\n  }\n}\nexport default QuoteReqUpdate;","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/ManageQuote.js",["232","233"],"import React, { Component, useEffect} from 'react';\nimport InfiniteScroll from 'react-infinite-scroller';\n\n\nimport AdminService from \"../services/admin.service\";\nimport EditQuote from './EditQuote';\n\nimport Popup from \"../components/Popup\";\nimport { validationMessages } from '../common/Constants';\nimport { statusColorClass } from '../common/Utils.js';\n\nclass ManageQuote extends Component {\n\n    state = {\n        searchValue: \"\",\n        selectedItem: [],\n        listitems: [],\n        updateQuotePage: false,\n        popupConfig: {},\n        isPopupOpen: false,\n        hasMoreItems: true,\n        pageNo: 0\n    }\n    constructor(props) {\n        super(props);\n    }\n\n\n    \n      \n    render() {\n        return (\n            <React.Fragment>\n                <Popup popupConfig = {this.state.popupConfig} openFlag = {this.state.isPopupOpen} parentCloseCallback={this.handleClose.bind(this)} parentConfirmCallback = {this.handleModalYes}></Popup>\n                {this.state.updateQuotePage ? <EditQuote selectedQuoteId= {this.state.selectedItem.id} parentCallback= {this.parentCallback}/> : this.renderQuoteList() }\n            </React.Fragment>\n        );\n    }\n    getAllQuotes() {\n        AdminService.getAllQuotes(this.state.pageNo).then(\n            response => {\n                if(response){\n                    //var tmpListitems = this.state.listitems.concat(response.data.rows);\n                    var tmpListitems = [...this.state.listitems, ...response.data.rows];\n                    this.setState({\n                        listitems: tmpListitems,\n                        pageNo: this.state.pageNo+1\n                    });\n\n                    if(this.state.pageNo >= response.data.currentPage) {\n                        this.setState({\n                            hasMoreItems: false\n                        });\n                    }\n                }\n            },\n            error => {\n                console.log(\"Error\");\n            }\n        );\n    }\n    handleSearchChange(e) {\n        this.setState({\n            searchValue: e.target.value.toLowerCase()\n        });\n    }\n    onQuotereqSelected(selectedItem) {\n        this.setState({\n            selectedItem: selectedItem\n        });\n    }\n\n    handleClose = () => {\n        this.setState({\n            isPopupOpen: false\n        });\n    };\n\n    handleModalYes = () => {\n        this.setState({\n            isPopupOpen: false\n        });\n        AdminService.deleteQuote(this.state.selectedItem.id).then(\n            response => {\n                var tempList = this.state.listitems.filter(item => item.id !== this.state.selectedItem.id);\n                this.setState({\n                    listitems: tempList,\n                    selectedItem: []\n                });\n            },\n            error => {\n              console.log(\"Error\");\n            }\n          );\n    };\n\n    showPopup(message) {\n        this.setState({\n            isPopupOpen: true,\n            popupConfig : {\n                header: \"Message\",\n                body:message,\n                type: \"message\"\n            }\n        });\n    }\n    deleteQuote() {\n        if (this.state.selectedItem && this.state.selectedItem.length === 0) {\n            this.showPopup(validationMessages.NO_ITEM);\n        } else {\n            this.setState({\n                isPopupOpen: true,\n                popupConfig : {\n                    header: \"Confirm to Delete\",\n                    body:validationMessages.DELETE_CONFIRM+this.state.selectedItem.title,\n                    type: \"confirmation\"\n                }\n            });\n        }\n    }\n\n    editQuote() {\n        if (this.state.selectedItem && this.state.selectedItem.length === 0) {\n            this.showPopup(validationMessages.NO_ITEM);\n        } else {\n            this.setState({\n                updateQuotePage: true\n            });\n        }\n    }\n    parentCallback = () => {\n        this.setState({\n            selectedItem: [],\n            updateQuotePage: false\n        });\n    }\n    \n    renderQuoteList() {\n        return (\n\n        \n        <div className=\"col admin-list-page\">\n            <div className=\"list-group-header section-header row\">\n                <div className=\"col-4\">\n                    <span className=\"mb-1 underline\">Quote</span>\n                    <span className=\"mb-1 blue-color pl-2\">Requests</span>\n                </div>\n                <div className=\"col-8 text-right\">\n                    <div className=\"has-search\">\n                        <span className=\"fa fa-search form-control-feedback\"></span>\n                        <input type=\"text\" className=\"form-control search-box\" placeholder=\"Search quote requests...\" onChange={this.handleSearchChange.bind(this)} />\n                    </div>\n                    <button className=\"btn delete-btn\" onClick={() => this.deleteQuote()}></button>\n                    <button className=\"btn edit-btn\" onClick={() => this.editQuote()}></button>\n\n                </div>\n            </div>\n            <div className=\"quote-req-list\">\n                <div className=\"row mt-1 quote-req-header\">\n                    <div className=\"col-4\">\n                        <label>Title</label>\n                    </div>\n                    <div className=\"col-sm\">\n                        <label>Submitted by</label>\n                    </div>\n                    <div className=\"col-sm\">\n                        <label>Received On</label>\n                    </div>\n                    <div className=\"col-sm\">\n                        <label>Modified On</label>\n                    </div>\n                    <div className=\"col-sm\">\n                        <label>Status</label>\n                    </div>\n                    <div className=\"col-sm text-right\">\n                        <label>Attachments</label>\n                    </div>\n                </div>\n                <div className=\"quote-req-table\" style={{maxHeight: (window.innerHeight - 200) + 'px'}}>\n\n                <InfiniteScroll\n                pageStart={0}\n                loadMore={this.getAllQuotes.bind(this)}\n                hasMore={this.state.hasMoreItems}\n                loader={<div className=\"loader\" key={0}>Loading ...</div>}\n                useWindow={false}\n            >\n               \n\n\n\n               {this.state.listitems && this.state.listitems.filter(item =>\n                        item.title.toLowerCase().includes(this.state.searchValue)).map(item => (\n                            <div className=\"row mt-1\" key={item.id}>\n                                <div className=\"col-4\" >\n                                    <label className=\"btn btn-default blue projectname-truncate text-truncate\">\n                                        <input type=\"radio\" className=\"toggle\"\n                                            name=\"quoteItem\" value={item.id}\n                                            onChange={() => this.onQuotereqSelected(item)} />\n                                        {item.title}\n                                    </label>\n                                </div>\n\n                                <div className=\"col-sm\">\n                                    <label>{item.User.name}</label>\n                                </div>\n                                <div className=\"col-sm\">\n                                    <label>{(new Date(item.createdAt)).toLocaleDateString()}</label>\n                                </div>\n                                <div className=\"col-sm\">\n                                    <label>{(new Date(item.updatedAt)).toLocaleDateString()}</label>\n                                </div>\n                                <div className=\"col-sm\">\n                                    <span className={\"badge \" + statusColorClass(item.status)} >{item.status}</span>\n                                </div>\n                                <div className=\"col-sm text-right\">\n                                    <span className=\"badge attachment-badge\">{item.Uploads && item.Uploads.length}</span>\n                                </div>\n                            </div>\n                        ))}\n\n\n\n\n\n\n            </InfiniteScroll>\n\n\n                    \n\n\n\n\n\n\n\n\n                </div>\n            </div>\n        </div>);\n    }\n    \n}\nexport default ManageQuote;","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/components/MyAlert.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/components/Popup.js",["234"],"import React from 'react';\nimport { Button } from 'reactstrap';\nimport Modal from \"react-bootstrap/Modal\";\nimport ForgotPassword from \"../common/ForgotPassword\";\nimport OperationList from \"../common/OperationList\";\nimport ConfigureOperation from \"../common/ConfigureOperation\";\nimport Profiile from \"../common/Profile\";\n\nclass Popup extends React.Component {\n\n  callback = (list) => {\n    this.props.parentCloseCallback(list);\n  }\n\n  renderPopupBody() {  \n    switch(this.props.popupConfig.type) {\n      case 'forgotPassword':\n        return <ForgotPassword popupClose={this.props.parentCloseCallback}></ForgotPassword>;\n      case 'toolsList':\n        return <ConfigureOperation showTools={true} popupClose={this.callback}></ConfigureOperation>;\n      case 'workerList':\n        return <ConfigureOperation showWorkers={true} popupClose={this.callback}></ConfigureOperation>;\n      case 'configureOperation':\n        return <ConfigureOperation showTools={true} showWorkers={true} popupClose={this.callback}></ConfigureOperation>;\n      case 'operationList':\n        return <OperationList popupClose={this.callback}></OperationList>;\n      case 'image':\n        return <div class=\"container\"> \n        <iframe class=\"responsive-iframe\"  src={this.props.popupConfig.body}  height=\"1000\" width=\"1000\"></iframe>\n      </div>;\n      case 'profile':\n          return <Profiile></Profiile> ;\n        default:\n        return this.props.popupConfig.body;\n    }\n  };\n  getClassName() {\n    switch(this.props.popupConfig.type) {\n      case 'configureOperation':\n        return 'confCntr';\n      case 'image':\n        return 'imgCntr';\n      default:\n        return '';\n    }\n  };\n\n  render() {\n    const popupConfigType = this.props.popupConfig.type;\n    let button;\n    if (popupConfigType === \"confirmation\") {\n      button = <Button color=\"success\" onClick={this.props.parentConfirmCallback}>Confirm Delete</Button>;\n    } \n    return (\n      <Modal show={this.props.openFlag} onHide={this.props.parentCloseCallback}  className={this.getClassName()}>\n        <Modal.Header closeButton>\n          <Modal.Title>{this.props.popupConfig.header}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body >\n        { this.renderPopupBody() }\n        </Modal.Body>\n        <Modal.Footer>\n          {button}\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\nexport default Popup;","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/components/Sidebar.js",["235"],"import React, { Component } from 'react';\nclass Sidebar extends Component {\n\n    \n    constructor(props) {\n        super(props); \n        this.state = {\n            activeLink: 1,\n            leftMenu: []\n        } \n        this.selectMenu();\n    }\n    selectMenu() {\n        var adminFlag = JSON.parse(localStorage.getItem('user')).admin;\n        var menu = [];\n        if (adminFlag) {\n            menu = [\n                {\n                    id: 1,\n                    name: \"Quotes\",\n                    className: \"nav-quote-req\" \n                },\n                {\n                    id: 2,\n                    name: \"Projects \",\n                    className: \"nav-projects \"\n                },\n                {\n                    id: 3,\n                    name: \"Operations\",\n                    className: \"nav-operations\"\n                },\n                {\n                    id: 4,\n                    name: \"Inventory\",\n                    className: \"nav-inventory\"\n                },\n                {\n                    id: 5,\n                    name: \"Worker\",\n                    className: \"nav-workers\"\n                },\n                {\n                    id: 6,\n                    name: \"Customer\",\n                    className: \"nav-customer\"\n                },\n                {\n                    id: 7,\n                    name: \"Inspection\",\n                    className: \"nav-inspection\"\n                }\n            ];\n           \n        } else {\n             menu = [\n                {\n                    id: 1,\n                    name: \"Projects \",\n                    className: \"nav-projects \"\n                },\n                {\n                    id: 2,\n                    name: \"Operations\",\n                    className: \"nav-operations\"\n                },\n                {\n                    id: 3,\n                    name: \"Schedule\",\n                    className: \"nav-schedule\"\n                }\n            ];\n        }\n        this.state.leftMenu = menu\n    }\n    selectMenuItem(id) {\n        this.setState({ activeLink: id });\n        this.props.onClick(id);\n    }\n\n\n    render() {\n        \n        const { leftMenu, activeLink } = this.state;\n        return (\n            <React.Fragment>\n\n                    <div className=\"sidebar-div\">\n                        <ul className=\"nav flex-column\">\n                            {leftMenu && leftMenu.map(item => {\n                                return (\n                                    <li className={\n                                        item.className +\n                                        (item.id === activeLink ? \" nav-item active_item\" : \" nav-item\")\n                                      } key = {item.id}>\n                                        <p className=\"nav-link\" data-toggle=\"tab\" onClick={(e) => this.selectMenuItem(item.id)} >\n                                            <span>{item.name}</span>\n                                        </p>\n                                    </li>\n                                );\n                            })}\n                        </ul>\n                    </div>\n                    \n                \n            </React.Fragment>\n        );\n    }\n}\nexport default Sidebar;","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/worker/WorkerDashboard.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/worker/WorkerOperations.js",["236"],"import React, { Component } from 'react';\n\nimport jsonData from \"../../data/operationsData.json\";\nimport AdminService from \"../services/admin.service\";\n\nclass WorkerOperations extends Component {\n    state = {\n        searchValue: \"\",\n        listitems: jsonData.operationsList,\n        selectedItem: [],\n        editOperationPage: false\n    }\n    constructor(props) {\n        super(props);\n        //this.getAllOperationList();\n    }\n    getAllOperationList() {\n        AdminService.getAllOperations().then(\n            response => {\n                this.setState({\n                    listitems: response.data.operations\n                });\n            },\n            error => {\n              console.log(\"Error\");\n            }\n          );\n    }\n    handleSearchChange(e) {\n        this.setState({\n            searchValue: e.target.value.toLowerCase()\n        });\n    }\n   \n    onOperationSelected(selectedItem) {\n        this.setState({\n            selectedItem: selectedItem\n        });\n    }\n    parentCallback = () => {\n        this.setState({\n            selectedItem: []\n        });\n        this.setState({\n            editOperationPage:false\n          });\n    }\n    renderOperationsList() {\n        return(\n            <div className=\"col admin-list-page\" id=\"operations-page\">\n                    <div className=\"list-group-header section-header row\">\n\n                        <div className=\"col-4\">\n                            <span className=\"mb-1 underline\">Manage</span>\n                            <span className=\"mb-1 blue-color pl-2\">Operations</span>\n                        </div>\n\n                        <div className=\"col-8 text-right\">\n                            <div className=\"has-search\">\n                                <span className=\"fa fa-search form-control-feedback\"></span>\n                                <input type=\"text\" className=\"form-control search-box\" placeholder=\"Search quote requests...\" onChange={this.handleSearchChange.bind(this)} />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"quote-req-list\">\n                        <div className=\"row mt-1 quote-req-header\">\n                            <div className=\"col-sm\">\n                                <label>Operation Name</label>\n                            </div>\n                            <div className=\"col-sm\">\n                                <label>Description</label>\n                            </div>\n                            <div className=\"col-sm\">\n                                <label>Start Date</label>\n                            </div>\n                            <div className=\"col-sm\">\n                                <label>End Date</label>\n                            </div>\n                            <div className=\"col-sm\">\n                                <label>Hours Commited</label>\n                            </div>\n                            <div className=\"col-sm\">\n                                <label>Hours Left</label>\n                            </div>\n                            <div className=\"col-sm\">\n                                <label>Status</label>\n                            </div>\n                        </div>\n                        <div className=\"quote-req-table\">\n\n                           {this.state.listitems.filter(item =>\n                                item.o_name.toLowerCase().includes(this.state.searchValue)).map(listitem => (\n\n                                    <div className=\"row mt-1\" key={listitem.id}>\n                                        <div className=\"col-sm\" >\n                                            <label className=\"btn btn-default blue projectname-truncate text-truncate\">\n                                                <input type=\"radio\" className=\"toggle\"\n                                                    name=\"operationItem\" value={listitem.id}\n                                                    onChange={() => this.onOperationSelected(listitem)} />\n                                                {listitem.o_name}\n                                            </label>\n                                            \n                                        </div>\n                                        <div className=\"col-sm\" >\n                                            <label className=\"description-truncate text-truncate\">{listitem.o_desc}</label>\n                                        </div>\n                                        <div className=\"col-sm\" >\n                                            <label>{listitem.createdAt}</label>\n                                        </div>\n                                        <div className=\"col-sm\" >\n                                            <label>{listitem.updatedAt}</label>\n                                        </div>\n                                        <div className=\"col-sm\" >\n                                            <label>{listitem.hoursCommited}</label>\n                                        </div>\n                                        <div className=\"col-sm\" >\n                                            <label>{listitem.hoursLeft}</label>\n                                        </div>\n                                        <div className=\"col-sm\" >\n                                            <label>{listitem.status}</label>\n                                        </div>\n                                    </div>\n                                ))}\n                        </div>\n                    </div>\n                </div>\n        );\n    }\n    render() {\n        return (\n            <React.Fragment>\n                {this.renderOperationsList()}\n            </React.Fragment>\n        );\n    }\n}\nexport default WorkerOperations;","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/worker/WorkerProjects.js",["237"],"import React, { Component } from 'react';\nimport {statusColorClass} from '../common/Utils.js';\n\nimport AdminService from \"../services/admin.service\";\n\nimport jsonData from \"../../data/projectData.json\";\n\nclass WorkerProjects extends Component {\n    state = {\n        searchValue: \"\",\n        listitems: jsonData.projects,\n        selectedItem: [],\n        editProjectPage: false\n    }\n    constructor(props) {\n        super(props);\n        //this.getAllProjectList();\n    }\n    getAllProjectList() {\n        AdminService.getAllProjects().then(\n            response => {\n                this.setState({\n                    listitems: response.data.projects\n                });\n            },\n            error => {\n              console.log(\"Error\");\n            }\n          );\n          \n    }\n    handleSearchChange(e) {\n        this.setState({\n            searchValue: e.target.value.toLowerCase()\n        });\n    }\n    \n    onProjectSelected(selectedItem) {\n        this.setState({\n            selectedItem: selectedItem\n        });\n    }\n    parentCallback = () => {\n        this.setState({\n            selectedItem: []\n        });\n        this.setState({\n            editProjectPage:false\n          });\n    }\n    renderProjectList() {\n        return(\n            <div className=\"col admin-list-page\" id=\"projects-page\">\n                    <div className=\"list-group-header section-header row\">\n\n                        <div className=\"col-4\">\n                            <span className=\"mb-1 underline\">Manage</span>\n                            <span className=\"mb-1 blue-color pl-2\">Projects</span>\n                        </div>\n\n                        <div className=\"col-8 text-right\">\n                            <div className=\"has-search\">\n                                <span className=\"fa fa-search form-control-feedback\"></span>\n                                <input type=\"text\" className=\"form-control search-box\" placeholder=\"Search projects...\" onChange={this.handleSearchChange.bind(this)} />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"quote-req-list\">\n                        <div className=\"row mt-1 quote-req-header\">\n                            <div className=\"col-sm\">\n                                <label>Project Name</label>\n                            </div>\n                            <div className=\"col-sm\">\n                                <label>Description</label>\n                            </div>\n                            <div className=\"col-sm\">\n                                <label>Hours Commited</label>\n                            </div>\n                            <div className=\"col-sm\">\n                                <label>Hours Left</label>\n                            </div>\n\n                            <div className=\"col-sm\">\n                                <label>Start Date</label>\n                            </div>\n                            <div className=\"col-sm\">\n                                <label>End Date</label>\n                            </div>\n                            \n                            \n                            <div className=\"col-sm\">\n                                <label>Status</label>\n                            </div>\n                        </div>\n                        <div className=\"quote-req-table\">\n                        \n                            {this.state.listitems.filter(item =>\n                                item.p_name.toLowerCase().includes(this.state.searchValue)).map(listitem => (\n\n                                    <div className=\"row mt-1\" key={listitem.id}>\n                                        <div className=\"col-sm\" >\n                                            <label className=\"btn btn-default blue projectname-truncate text-truncate\">\n                                                <input type=\"radio\" className=\"toggle\"\n                                                    name=\"projectItem\" value={listitem.id}\n                                                    onChange={() => this.onProjectSelected(listitem)} />\n                                                {listitem.p_name}\n                                            </label>\n                                            \n                                        </div>\n                                        <div className=\"col-sm\" >\n                                            <label className=\"description-truncate text-truncate\">{listitem.p_desc}</label>\n                                        </div>\n                                        <div className=\"col-sm\" >\n                                            <label>{listitem.hours_commited}</label>\n                                        </div>\n                                        <div className=\"col-sm\" >\n                                            <label>{listitem.hours_left}</label>\n                                        </div>\n                                        <div className=\"col-sm\" >\n                                            <label>{(new Date(listitem.start_date)).toLocaleDateString()}</label>\n                                        </div>\n                                        <div className=\"col-sm\" >\n                                            <label>{(new Date(listitem.end_date)).toLocaleDateString()}</label>\n                                        </div>\n                                        <div className=\"col-sm\" >\n                                            <label className = {\"badge \" + statusColorClass(listitem.p_status)} >{listitem.p_status}</label>\n                                        </div>\n                                    </div>\n                                ))}\n                        </div>\n                    </div>\n                </div>\n        );\n    }\n    render() {\n        return (\n            <React.Fragment>\n                {this.renderProjectList()}\n            </React.Fragment>\n        );\n    }\n}\nexport default WorkerProjects;","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/worker/WorkerTimesheet.js",["238"],"\nimport React, { Component } from 'react';\n\nimport { ScheduleComponent, Day, Week, WorkWeek, Month, Agenda, Inject } from '@syncfusion/ej2-react-schedule';\n\nclass WorkerSchedule extends Component {\n    state = {\n       \n    }\n    constructor(props) {\n        super(props);\n        \n    }\n    render() {\n        return (\n            <div className=\"col admin-list-page\" id=\"operations-page\">\n            <ScheduleComponent>\n    <Inject services={[Day, Week, WorkWeek, Month, Agenda]}/>\n</ScheduleComponent>\n</div>\n        );\n    }\n}\nexport default WorkerSchedule;","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/ToolsList.js",[],["239","240"],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/components/Checkbox.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/OperationList.js",["241"],"import React, { Component } from 'react';\n\nimport AdminService from \"../services/admin.service\";\n\nimport Checkbox from \"../components/Checkbox\";\n\nclass OperationList extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            listitems: [],\n            searchValue: \"\"\n        }\n        this.getAllOperationList();\n    }\n\n    getAllOperationList() {\n        AdminService.getAllOperations().then(\n            response => {\n                console.log(response);\n                debugger;\n                this.setState({\n                    listitems: response.data.rows\n                });\n            },\n            error => {\n                console.log(\"Error\");\n            }\n        );\n    }\n    onTagOperationSelectedSave() {\n        this.props.popupClose(this.state.selectedItem);\n    }\n\n    onOperationSelected(selectedItem) {\n        this.setState({\n            selectedItem: selectedItem\n        });\n    }\n    render() {\n        return (\n            <React.Fragment>\n                <div className=\"admin-list-page\">\n                    <div className=\"quote-req-list\">\n                        <div className=\"row mt-1 quote-req-header\">\n                            <div className=\"col-sm\">\n                                <label>Operation Name</label>\n                            </div>\n                            <div className=\"col-sm\">\n                                <label>Description</label>\n                            </div>\n\n                        </div>\n\n                        <div className=\"quote-req-table\">\n                            {this.state.listitems && this.state.listitems.filter(item =>\n                                item.name.toLowerCase().includes(this.state.searchValue)).map(listitem => (\n\n                                    <div className=\"row mt-1\" key={listitem.id}>\n                                        <div className=\"col-sm\" >\n                                            <label className=\"btn btn-default blue projectname-truncate text-truncate\">\n                                                <input type=\"radio\" className=\"toggle\"\n                                                    name=\"operationItem\" value={listitem.id}\n                                                    onChange={() => this.onOperationSelected(listitem)} />\n                                                {listitem.name}\n                                            </label>\n\n                                        </div>\n                                        <div className=\"col-sm\" >\n                                            <label className=\"description-truncate text-truncate\">{listitem.desc}</label>\n                                        </div>\n                                    </div>\n                                ))}\n                        </div>\n                        <button onClick={() => this.onTagOperationSelectedSave()} className=\"btn btn-success btn-sm\" >Save</button>\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n\n    }\n}\nexport default OperationList;","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/ConfigureOperation.js",["242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260"],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/components/TableRow.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/components/TableHeader.js",["261"],"import React from \"react\";\n\nconst TableHeader = ({ headerObj, onCheckboxChange }) => {\n\n  return (\n    <tr className=\"green-text-color2\" key=\"tableHeade\">\n      {headerObj && headerObj.map((item, i) => {\n          if (item == \"inputCheckbox\") {\n            return (\n              <th key=\"0\" >\n                <input type=\"checkbox\" name=\"selectAllTools\" />\n              </th>\n            )\n          } else {\n            return (\n              <th key={item}>{item}</th>\n            )\n          }\n        }\n      )}\n    </tr>\n  );\n}\n\nexport default TableHeader;","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/Profile.js",["262"],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/services/worker.service.js",[],{"ruleId":"263","replacedBy":"264"},{"ruleId":"265","replacedBy":"266"},{"ruleId":"267","severity":1,"message":"268","line":15,"column":5,"nodeType":"269","messageId":"270","endLine":17,"endColumn":6},{"ruleId":"271","severity":1,"message":"272","line":77,"column":64,"nodeType":"273","messageId":"274","endLine":77,"endColumn":66},{"ruleId":"275","severity":1,"message":"276","line":109,"column":17,"nodeType":"277","endLine":109,"endColumn":40},{"ruleId":"278","severity":1,"message":"279","line":114,"column":21,"nodeType":"280","messageId":"281","endLine":114,"endColumn":38},{"ruleId":"275","severity":1,"message":"276","line":119,"column":17,"nodeType":"277","endLine":119,"endColumn":40},{"ruleId":"282","severity":1,"message":"283","line":162,"column":104,"nodeType":"284","messageId":"285","endLine":162,"endColumn":106},{"ruleId":"271","severity":1,"message":"286","line":175,"column":36,"nodeType":"273","messageId":"274","endLine":175,"endColumn":38},{"ruleId":"278","severity":1,"message":"287","line":50,"column":17,"nodeType":"280","messageId":"281","endLine":50,"endColumn":24},{"ruleId":"271","severity":1,"message":"286","line":54,"column":53,"nodeType":"273","messageId":"274","endLine":54,"endColumn":55},{"ruleId":"275","severity":1,"message":"276","line":127,"column":9,"nodeType":"277","endLine":127,"endColumn":19},{"ruleId":"271","severity":1,"message":"272","line":127,"column":74,"nodeType":"273","messageId":"274","endLine":127,"endColumn":76},{"ruleId":"275","severity":1,"message":"276","line":130,"column":9,"nodeType":"277","endLine":130,"endColumn":34},{"ruleId":"278","severity":1,"message":"287","line":50,"column":17,"nodeType":"280","messageId":"281","endLine":50,"endColumn":24},{"ruleId":"271","severity":1,"message":"286","line":54,"column":53,"nodeType":"273","messageId":"274","endLine":54,"endColumn":55},{"ruleId":"278","severity":1,"message":"288","line":168,"column":21,"nodeType":"280","messageId":"281","endLine":168,"endColumn":25},{"ruleId":"289","severity":1,"message":"290","line":33,"column":37,"nodeType":"273","messageId":"291","endLine":33,"endColumn":38},{"ruleId":"289","severity":1,"message":"290","line":243,"column":40,"nodeType":"273","messageId":"291","endLine":243,"endColumn":41},{"ruleId":"289","severity":1,"message":"290","line":10,"column":37,"nodeType":"273","messageId":"291","endLine":10,"endColumn":38},{"ruleId":"292","severity":1,"message":"293","line":3,"column":10,"nodeType":"280","messageId":"294","endLine":3,"endColumn":17},{"ruleId":"292","severity":1,"message":"295","line":5,"column":10,"nodeType":"280","messageId":"294","endLine":5,"endColumn":23},{"ruleId":"292","severity":1,"message":"296","line":2,"column":10,"nodeType":"280","messageId":"294","endLine":2,"endColumn":16},{"ruleId":"292","severity":1,"message":"297","line":14,"column":8,"nodeType":"280","messageId":"294","endLine":14,"endColumn":21},{"ruleId":"282","severity":1,"message":"283","line":113,"column":110,"nodeType":"284","messageId":"285","endLine":113,"endColumn":112},{"ruleId":"282","severity":1,"message":"283","line":122,"column":116,"nodeType":"284","messageId":"285","endLine":122,"endColumn":118},{"ruleId":"271","severity":1,"message":"272","line":270,"column":60,"nodeType":"273","messageId":"274","endLine":270,"endColumn":62},{"ruleId":"278","severity":1,"message":"298","line":298,"column":11,"nodeType":"280","messageId":"281","endLine":298,"endColumn":14},{"ruleId":"271","severity":1,"message":"272","line":298,"column":82,"nodeType":"273","messageId":"274","endLine":298,"endColumn":84},{"ruleId":"292","severity":1,"message":"299","line":1,"column":28,"nodeType":"280","messageId":"294","endLine":1,"endColumn":37},{"ruleId":"267","severity":1,"message":"268","line":24,"column":5,"nodeType":"269","messageId":"270","endLine":26,"endColumn":6},{"ruleId":"300","severity":1,"message":"301","line":29,"column":9,"nodeType":"302","endLine":29,"endColumn":106},{"ruleId":"275","severity":1,"message":"276","line":74,"column":9,"nodeType":"277","endLine":74,"endColumn":19},{"ruleId":"267","severity":1,"message":"268","line":13,"column":5,"nodeType":"269","messageId":"270","endLine":16,"endColumn":6},{"ruleId":"267","severity":1,"message":"268","line":15,"column":5,"nodeType":"269","messageId":"270","endLine":18,"endColumn":6},{"ruleId":"267","severity":1,"message":"268","line":10,"column":5,"nodeType":"269","messageId":"270","endLine":13,"endColumn":6},{"ruleId":"263","replacedBy":"303"},{"ruleId":"265","replacedBy":"304"},{"ruleId":"292","severity":1,"message":"305","line":5,"column":8,"nodeType":"280","messageId":"294","endLine":5,"endColumn":16},{"ruleId":"271","severity":1,"message":"272","line":103,"column":78,"nodeType":"273","messageId":"274","endLine":103,"endColumn":80},{"ruleId":"271","severity":1,"message":"272","line":104,"column":66,"nodeType":"273","messageId":"274","endLine":104,"endColumn":68},{"ruleId":"271","severity":1,"message":"272","line":106,"column":48,"nodeType":"273","messageId":"274","endLine":106,"endColumn":50},{"ruleId":"275","severity":1,"message":"276","line":123,"column":17,"nodeType":"277","endLine":123,"endColumn":27},{"ruleId":"278","severity":1,"message":"306","line":124,"column":21,"nodeType":"280","messageId":"281","endLine":124,"endColumn":28},{"ruleId":"271","severity":1,"message":"272","line":135,"column":81,"nodeType":"273","messageId":"274","endLine":135,"endColumn":83},{"ruleId":"271","severity":1,"message":"272","line":136,"column":75,"nodeType":"273","messageId":"274","endLine":136,"endColumn":77},{"ruleId":"271","severity":1,"message":"272","line":138,"column":50,"nodeType":"273","messageId":"274","endLine":138,"endColumn":52},{"ruleId":"271","severity":1,"message":"286","line":155,"column":83,"nodeType":"273","messageId":"274","endLine":155,"endColumn":85},{"ruleId":"275","severity":1,"message":"276","line":156,"column":17,"nodeType":"277","endLine":156,"endColumn":27},{"ruleId":"278","severity":1,"message":"306","line":157,"column":21,"nodeType":"280","messageId":"281","endLine":157,"endColumn":28},{"ruleId":"271","severity":1,"message":"272","line":172,"column":31,"nodeType":"273","messageId":"274","endLine":172,"endColumn":33},{"ruleId":"271","severity":1,"message":"272","line":173,"column":32,"nodeType":"273","messageId":"274","endLine":173,"endColumn":34},{"ruleId":"271","severity":1,"message":"272","line":175,"column":44,"nodeType":"273","messageId":"274","endLine":175,"endColumn":46},{"ruleId":"271","severity":1,"message":"272","line":176,"column":45,"nodeType":"273","messageId":"274","endLine":176,"endColumn":47},{"ruleId":"271","severity":1,"message":"272","line":192,"column":31,"nodeType":"273","messageId":"274","endLine":192,"endColumn":33},{"ruleId":"271","severity":1,"message":"272","line":193,"column":32,"nodeType":"273","messageId":"274","endLine":193,"endColumn":34},{"ruleId":"271","severity":1,"message":"272","line":195,"column":40,"nodeType":"273","messageId":"274","endLine":195,"endColumn":42},{"ruleId":"271","severity":1,"message":"272","line":196,"column":41,"nodeType":"273","messageId":"274","endLine":196,"endColumn":43},{"ruleId":"271","severity":1,"message":"272","line":8,"column":20,"nodeType":"273","messageId":"274","endLine":8,"endColumn":22},{"ruleId":"278","severity":1,"message":"288","line":71,"column":17,"nodeType":"280","messageId":"281","endLine":71,"endColumn":21},"no-native-reassign",["307"],"no-negated-in-lhs",["308"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-redeclare","'selectedOperation' is already defined.","Identifier","redeclared","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Expected '!==' and instead saw '!='.","'pattern' is already defined.","'data' is already defined.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","no-unused-vars","'isEmail' is defined but never used.","unusedVar","'loginMessages' is defined but never used.","'Button' is defined but never used.","'operationJson' is defined but never used.","'obj' is already defined.","'useEffect' is defined but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement",["307"],["308"],"'Checkbox' is defined but never used.","'tmpCost' is already defined.","no-global-assign","no-unsafe-negation"]